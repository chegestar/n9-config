#!/usr/bin/perl
use strict;
use warnings;

sub hasError(@);
sub hasUnread(@);
sub hasNewUnread(@);
sub run(@);

my @accounts = qw(G L);
my %alerts = (
  G => "/usr/share/sounds/soothing/jumpdown.wav",
  L => "/usr/share/sounds/soothing/jumpup.wav",
);

my $emailExec = "/opt/qtemail/bin/email.pl";

my $usage = "Usage: $0 [-q|--quiet]\n";

sub main(@){
  if(`whoami` ne "user\n"){
    print "rerunning as user\n";
    exec "udo", $0, @_;
  }
  my $quiet = shift if @_ > 0 and $_[0] =~ /^(-q|--quiet)$/;
  die $usage if @_ > 0;

  #update email
  run "$emailExec --update @accounts";

  #setup lpsmagic
  run "source /etc/profile; lpsmagic -once 2>&1 | grep 'Rendering format string'";

  #run alerts
  for my $acc(@accounts){
    if(not hasError $acc and hasNewUnread $acc){
      run "source /etc/profile; vibrate.py $alerts{$acc}";
    }
  }


  if(not $quiet){
    run $emailExec, "--print";
    print "\n";
    run $emailExec, "--summary";
    print "\n";
    run $emailExec, "--status-line";
    print "\n";
  }
}

sub hasError(@){
  run $emailExec, "--has-error", @_;
  return $? == 0;
}
sub hasUnread(@){
  run $emailExec, "--has-unread", @_;
  return $? == 0;
}
sub hasNewUnread(@){
  run $emailExec, "--has-new-unread", @_;
  return $? == 0;
}

sub run(@){
  print "@_\n";
  system @_;
}

&main(@ARGV);
