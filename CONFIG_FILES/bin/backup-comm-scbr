#!/usr/bin/perl
use strict;
use warnings;

if(`whoami` eq "root\n"){
  exec "su", "user", "-c", "source /etc/profile; $0 @ARGV";
}

my $usage = "
  Usage: $0 sms|call [--retry N] [file]
    backup texts or calls to file, or to a file in default backup dir
    if the libqtcontacts background thread dies, retry N times {default is 0}.
";

sub run(@);
sub backupComm($$);
sub attemptBackupComm($$$);

sub run(@){
  print "@_\n";
  system @_;
}

sub backupComm($$){
  my ($exec, $file) = @_;

  my $cmd = "timedkill 1200 $exec export $file 2>&1";
  open CMD, "$cmd |";
  my $line;
  while($line = <CMD>){
    if($line =~ /^libqtcontacts-tracker: initializing libqtcontacts-tracker/){
      print "INIT";
    }elsif($line =~ /Not cleaning up obsolete resources for nao:hasTag/i){
      print ".";
    }elsif($line =~ /^selected group (\d+)$/i){
      print "|";
    }elsif($line =~ /^\s*getEvents\(\) from (\d+) to (\d+)$/i){
      print ",";
    }elsif($line =~ /^\s*got (\d+) events(?: for group (\d+))?$/i){
      print $1 == 0 ? "_" : " $1 ";
    }elsif($line =~ /The task queue's background thread stalled/i){
      print $line;
      print "ugh libqtcontacts, killing $exec\n";
      run "pkill", $exec;
      close CMD;
      print "thread stall error\n";
      return 1;
    }else{
      print $line;
    }
  }
  close CMD;
  return $?;
}

sub attemptBackupComm($$$){
  my ($exec, $file, $retries) = @_;

  my $exitCode = backupComm $exec, $file;
  if($exitCode == 0){
    my @lines = `cat $file`;
    print "\nexported " . @lines . " items\n";
  }elsif($retries > 0){
    print "\n\n\n!!! $exec failed, RETRYING $retries more time(s)\n";
    attemptBackupComm($exec, $file, $retries - 1);
  }else{
    die "$exec failed\n";
  }
}

sub main(@){
  my $type = shift() || '';
  my $retries = 0;
  if(@_ >= 2 and $_[0] eq '--retry' and $_[1] =~ /^\d+$/){
    shift;
    $retries = shift();
  }
  my $file = shift();

  die $usage if $type !~ /^(sms|call)$/ or @_ > 0;

  my $dest = "/home/user/MyDocs/backup-$type";
  my $exec = "${type}backuprestore";

  if(not defined $file){
    run "mkdir -p $dest";
    my $name = `date +%Y_%m_%d-%s`;
    chomp $name;
    $file = "$dest/$name.$type";
  }

  $| = 1; #autoflush

  attemptBackupComm $exec, $file, $retries;
}

&main(@ARGV);
